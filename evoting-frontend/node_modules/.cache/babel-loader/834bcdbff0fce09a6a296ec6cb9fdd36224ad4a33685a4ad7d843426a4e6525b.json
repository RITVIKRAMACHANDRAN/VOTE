{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import Web3 from\"web3\";import axios from\"axios\";import{startRegistration}from\"@simplewebauthn/browser\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SERVER_URL=\"\";// Replace with Railway backend URL\nconst ADMIN_ADDRESS=\"   0x0ea217414c1fac69e4cbf49f3d8277df69a76b7d  \";function App(){const[walletAddress,setWalletAddress]=useState(\"\");const[candidateName,setCandidateName]=useState(\"\");const[adminMode,setAdminMode]=useState(false);const[message,setMessage]=useState(\"\");const[voterName,setVoterName]=useState(\"\");const[votingStarted,setVotingStarted]=useState(false);useEffect(()=>{const checkVotingTime=async()=>{try{const response=await axios.get(`${SERVER_URL}/votingTime`);const{startTime,endTime}=response.data;const currentTime=Math.floor(Date.now()/1000);setVotingStarted(currentTime>=startTime);}catch(error){console.error(\"❌ Error fetching voting time:\",error);}};checkVotingTime();},[]);useEffect(()=>{if(walletAddress.toLowerCase()===ADMIN_ADDRESS.toLowerCase()){setAdminMode(true);}else{setAdminMode(false);}},[walletAddress]);const connectMetaMask=async()=>{if(window.ethereum){try{await window.ethereum.request({method:\"eth_requestAccounts\"});const accounts=await window.ethereum.request({method:\"eth_accounts\"});console.log(\"✅ MetaMask Connected:\",accounts[0]);// Debugging log\nsetWalletAddress(accounts[0]);// ✅ Update state\n}catch(error){console.error(\"❌ MetaMask connection failed:\",error);}}else{alert(\"MetaMask is not installed.\");}};// ✅ Add Candidate (Admin Only)\nconst addCandidate=async()=>{try{if(!candidateName)return alert(\"Enter a candidate's name first!\");await axios.post(`${SERVER_URL}/addCandidate`,{name:candidateName,walletAddress});alert(\"Candidate added successfully!\");}catch(error){alert(\"Error adding candidate.\");}};const registerVoter=async()=>{if(votingStarted){alert(\"Voter registration is closed!\");return;}try{const credential=await startRegistration({publicKey:{challenge:new Uint8Array(32)}});const uuid=btoa(String.fromCharCode(...new Uint8Array(credential.rawId)));const response=await axios.post(`${SERVER_URL}/registerVoter`,{voterName,uuid});setMessage(response.data.message);}catch(error){setMessage(\"❌ Error registering voter\");}};const vote=async()=>{try{const credential=await startRegistration({publicKey:{challenge:new Uint8Array(32)}});const uuid=btoa(String.fromCharCode(...new Uint8Array(credential.rawId)));const response=await axios.post(`${SERVER_URL}/vote`,{uuid,candidateName});setMessage(response.data.message);}catch(error){setMessage(\"❌ Error casting vote\");}};return/*#__PURE__*/_jsxs(\"div\",{style:{textAlign:\"center\",padding:\"20px\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"E-Voting System\"}),/*#__PURE__*/_jsx(\"button\",{onClick:connectMetaMask,children:\"Connect MetaMask\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Connected Wallet: \",walletAddress||\"Not Connected\"]}),adminMode&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Panel\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:candidateName,onChange:e=>setCandidateName(e.target.value),placeholder:\"Enter Candidate Name\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addCandidate,children:\"Add Candidate\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Register as Voter\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Voter Name\",value:voterName,onChange:e=>setVoterName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:registerVoter,children:\"Register with Fingerprint\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Vote\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Candidate Name\",value:candidateName,onChange:e=>setCandidateName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:vote,children:\"Vote\"})]}),/*#__PURE__*/_jsx(\"h3\",{children:message})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Web3","axios","startRegistration","jsx","_jsx","jsxs","_jsxs","SERVER_URL","ADMIN_ADDRESS","App","walletAddress","setWalletAddress","candidateName","setCandidateName","adminMode","setAdminMode","message","setMessage","voterName","setVoterName","votingStarted","setVotingStarted","checkVotingTime","response","get","startTime","endTime","data","currentTime","Math","floor","Date","now","error","console","toLowerCase","connectMetaMask","window","ethereum","request","method","accounts","log","alert","addCandidate","post","name","registerVoter","credential","publicKey","challenge","Uint8Array","uuid","btoa","String","fromCharCode","rawId","vote","style","textAlign","padding","children","onClick","type","value","onChange","e","target","placeholder"],"sources":["C:/Users/Ajaykumar Kavassery/contracts/evoting-project/evoting-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport axios from \"axios\";\nimport { startRegistration } from \"@simplewebauthn/browser\";\n\nconst SERVER_URL = \"\"; // Replace with Railway backend URL\nconst ADMIN_ADDRESS =\"   0x0ea217414c1fac69e4cbf49f3d8277df69a76b7d  \"; \n\nfunction App() {\n    const [walletAddress, setWalletAddress] = useState(\"\");\n    const [candidateName, setCandidateName] = useState(\"\");\n    const [adminMode, setAdminMode] = useState(false);\n    const [message, setMessage] = useState(\"\");\n    const [voterName, setVoterName] = useState(\"\");\n    const [votingStarted, setVotingStarted] = useState(false);\n\n    \n \n    useEffect(() => {\n        const checkVotingTime = async () => {\n            try {\n                const response = await axios.get(`${SERVER_URL}/votingTime`);\n                const { startTime, endTime } = response.data;\n                const currentTime = Math.floor(Date.now() / 1000);\n                setVotingStarted(currentTime >= startTime);\n            } catch (error) {\n                console.error(\"❌ Error fetching voting time:\", error);\n            }\n        };\n        checkVotingTime();\n    }, []);\n\n    useEffect(() => {\n        if (walletAddress.toLowerCase() === ADMIN_ADDRESS.toLowerCase()) {\n            setAdminMode(true);\n        } else {\n            setAdminMode(false);\n        }\n    }, [walletAddress]);\n\n    const connectMetaMask = async () => {\n        if (window.ethereum) {\n            try {\n                await window.ethereum.request({ method: \"eth_requestAccounts\" });\n                const accounts = await window.ethereum.request({ method: \"eth_accounts\" });\n                console.log(\"✅ MetaMask Connected:\", accounts[0]); // Debugging log\n                setWalletAddress(accounts[0]); // ✅ Update state\n            } catch (error) {\n                console.error(\"❌ MetaMask connection failed:\", error);\n            }\n        } else {\n            alert(\"MetaMask is not installed.\");\n        }\n    };\n    \n\n    // ✅ Add Candidate (Admin Only)\n    const addCandidate = async () => {\n        try {\n            if (!candidateName) return alert(\"Enter a candidate's name first!\");\n\n            await axios.post(`${SERVER_URL}/addCandidate`, {\n                name: candidateName,\n                walletAddress\n            });\n\n            alert(\"Candidate added successfully!\");\n        } catch (error) {\n            alert(\"Error adding candidate.\");\n        }\n    };\n \n    const registerVoter = async () => {\n        if (votingStarted) {\n            alert(\"Voter registration is closed!\");\n            return;\n        }\n\n        try {\n            const credential = await startRegistration({ publicKey: { challenge: new Uint8Array(32) } });\n            const uuid = btoa(String.fromCharCode(...new Uint8Array(credential.rawId)));\n\n            const response = await axios.post(`${SERVER_URL}/registerVoter`, { voterName, uuid });\n            setMessage(response.data.message);\n        } catch (error) {\n            setMessage(\"❌ Error registering voter\");\n        }\n    };\n\n    const vote = async () => {\n        try {\n            const credential = await startRegistration({ publicKey: { challenge: new Uint8Array(32) } });\n            const uuid = btoa(String.fromCharCode(...new Uint8Array(credential.rawId)));\n\n            const response = await axios.post(`${SERVER_URL}/vote`, { uuid, candidateName });\n            setMessage(response.data.message);\n        } catch (error) {\n            setMessage(\"❌ Error casting vote\");\n        }\n    };\n\n\n return (\n        <div style={{ textAlign: \"center\", padding: \"20px\" }}>\n            <h1>E-Voting System</h1>\n            <button onClick={connectMetaMask}>Connect MetaMask</button>\n            <p>Connected Wallet: {walletAddress || \"Not Connected\"}</p>\n\n            {/* Admin Panel for Adding Candidates */}\n            {adminMode && (\n                <div>\n                    <h2>Admin Panel</h2>\n                    <input\n                        type=\"text\"\n                        value={candidateName}\n                        onChange={(e) => setCandidateName(e.target.value)}\n                        placeholder=\"Enter Candidate Name\"\n                    />\n                    <button onClick={addCandidate}>Add Candidate</button>\n                </div>\n            )}\n\n            \n<div>\n                <h2>Register as Voter</h2>\n                <input type=\"text\" placeholder=\"Voter Name\" value={voterName} onChange={(e) => setVoterName(e.target.value)} />\n                <button onClick={registerVoter}>Register with Fingerprint</button>\n            </div>\n\n            <div>\n                <h2>Vote</h2>\n                <input type=\"text\" placeholder=\"Candidate Name\" value={candidateName} onChange={(e) => setCandidateName(e.target.value)} />\n                <button onClick={vote}>Vote</button>\n            </div>\n\n            <h3>{message}</h3>\n        </div>\n    );\n};\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}