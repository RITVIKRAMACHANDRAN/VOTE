{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SERVER_URL=\"/api\";function App(){const[walletAddress,setWalletAddress]=useState(\"\");const[fingerprintCredential,setFingerprintCredential]=useState(null);const[candidates,setCandidates]=useState([]);const[selectedCandidate,setSelectedCandidate]=useState(\"\");const[candidateName,setCandidateName]=useState(\"\");useEffect(()=>{getCandidate();},[]);// ✅ Connect to MetaMask\nconst connectMetaMask=async()=>{if(window.ethereum){try{const accounts=await window.ethereum.request({method:\"eth_requestAccounts\"});setWalletAddress(accounts[0]);alert(\"MetaMask Connected!\");}catch(error){console.error(\"Error connecting MetaMask:\",error);alert(\"Failed to connect MetaMask.\");}}else{alert(\"MetaMask not detected. Please install MetaMask.\");}};// ✅ Register Fingerprint\nconst registerFingerprint=async()=>{try{const credential=await navigator.credentials.create({publicKey:{challenge:new Uint8Array(32),rp:{name:\"E-Voting System\"},user:{id:new Uint8Array(16),name:walletAddress,displayName:walletAddress},pubKeyCredParams:[{alg:-7,type:\"public-key\"}],authenticatorSelection:{authenticatorAttachment:\"platform\"},timeout:60000}});setFingerprintCredential(credential);// Send fingerprint to backend\nawait axios.post(`${SERVER_URL}/registerFingerprint`,{voterAddress:walletAddress,fingerprintData:credential.id});alert(\"Fingerprint Registered!\");}catch(error){console.error(\"Fingerprint registration failed:\",error);alert(\"Fingerprint registration failed.\");}};// ✅ Authenticate with Fingerprint\nconst authenticateFingerprint=async()=>{try{if(!fingerprintCredential){alert(\"No fingerprint registered. Please register first.\");return;}const assertion=await navigator.credentials.get({publicKey:{challenge:new Uint8Array(32),timeout:60000}});const response=await axios.post(`${SERVER_URL}/authenticateFingerprint`,{voterAddress:walletAddress,fingerprintData:assertion.id});alert(response.data.message);}catch(error){console.error(\"Fingerprint authentication failed:\",error);alert(\"Fingerprint authentication failed.\");}};// ✅ Add Candidate\nconst handleAddCandidate=async()=>{if(!candidateName){alert(\"Please enter a candidate name.\");return;}try{await axios.post(`${SERVER_URL}/addCandidate`,{name:candidateName});alert(\"Candidate added successfully!\");setCandidateName(\"\");getCandidate();}catch(error){console.error(\"Error adding candidate:\",error);alert(\"Failed to add candidate.\");}};// ✅ Fetch Candidates\nconst getCandidate=async candidateId=>{try{const response=await axios.get(`${SERVER_URL}/api/getCandidate/${candidateId}`);// ✅ Pass candidate ID\nsetCandidate(response.data);}catch(error){console.error(\"Error fetching candidate:\",error);}};// ✅ Vote for Candidate\nconst voteForCandidate=async()=>{if(!selectedCandidate){alert(\"Please select a candidate to vote for.\");return;}try{await axios.post(`${SERVER_URL}/vote`,{voterAddress:walletAddress,candidateId:selectedCandidate});alert(\"Vote cast successfully!\");}catch(error){console.error(\"Error casting vote:\",error);alert(\"Failed to cast vote.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"E-Voting System\"}),/*#__PURE__*/_jsx(\"button\",{onClick:connectMetaMask,children:\"Connect MetaMask\"}),/*#__PURE__*/_jsx(\"button\",{onClick:registerFingerprint,children:\"Register Fingerprint\"}),/*#__PURE__*/_jsx(\"button\",{onClick:authenticateFingerprint,children:\"Authenticate Fingerprint\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Add Candidate\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:candidateName,onChange:e=>setCandidateName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleAddCandidate,children:\"Add Candidate\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Vote\"}),/*#__PURE__*/_jsx(\"button\",{onClick:voteForCandidate,children:\"Vote\"})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","SERVER_URL","App","walletAddress","setWalletAddress","fingerprintCredential","setFingerprintCredential","candidates","setCandidates","selectedCandidate","setSelectedCandidate","candidateName","setCandidateName","getCandidate","connectMetaMask","window","ethereum","accounts","request","method","alert","error","console","registerFingerprint","credential","navigator","credentials","create","publicKey","challenge","Uint8Array","rp","name","user","id","displayName","pubKeyCredParams","alg","type","authenticatorSelection","authenticatorAttachment","timeout","post","voterAddress","fingerprintData","authenticateFingerprint","assertion","get","response","data","message","handleAddCandidate","candidateId","setCandidate","voteForCandidate","children","onClick","value","onChange","e","target"],"sources":["C:/Users/Ajaykumar Kavassery/contracts/evoting-project/evoting-frontend/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nconst SERVER_URL = \"/api\";\n\nfunction App() {\n    const [walletAddress, setWalletAddress] = useState(\"\");\n    const [fingerprintCredential, setFingerprintCredential] = useState(null);\n    const [candidates, setCandidates] = useState([]);\n    const [selectedCandidate, setSelectedCandidate] = useState(\"\");\n    const [candidateName, setCandidateName] = useState(\"\");\n\n    useEffect(() => {\n        getCandidate();\n    }, []);\n\n    // ✅ Connect to MetaMask\n    const connectMetaMask = async () => {\n        if (window.ethereum) {\n            try {\n                const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n                setWalletAddress(accounts[0]);\n                alert(\"MetaMask Connected!\");\n            } catch (error) {\n                console.error(\"Error connecting MetaMask:\", error);\n                alert(\"Failed to connect MetaMask.\");\n            }\n        } else {\n            alert(\"MetaMask not detected. Please install MetaMask.\");\n        }\n    };\n\n    // ✅ Register Fingerprint\n    const registerFingerprint = async () => {\n        try {\n            const credential = await navigator.credentials.create({\n                publicKey: {\n                    challenge: new Uint8Array(32),\n                    rp: { name: \"E-Voting System\" },\n                    user: {\n                        id: new Uint8Array(16),\n                        name: walletAddress,\n                        displayName: walletAddress,\n                    },\n                    pubKeyCredParams: [{ alg: -7, type: \"public-key\" }],\n                    authenticatorSelection: { authenticatorAttachment: \"platform\" },\n                    timeout: 60000,\n                },\n            });\n\n            setFingerprintCredential(credential);\n\n            // Send fingerprint to backend\n            await axios.post(`${SERVER_URL}/registerFingerprint`, {\n                voterAddress: walletAddress,\n                fingerprintData: credential.id,\n            });\n\n            alert(\"Fingerprint Registered!\");\n        } catch (error) {\n            console.error(\"Fingerprint registration failed:\", error);\n            alert(\"Fingerprint registration failed.\");\n        }\n    };\n\n    // ✅ Authenticate with Fingerprint\n    const authenticateFingerprint = async () => {\n        try {\n            if (!fingerprintCredential) {\n                alert(\"No fingerprint registered. Please register first.\");\n                return;\n            }\n\n            const assertion = await navigator.credentials.get({\n                publicKey: {\n                    challenge: new Uint8Array(32),\n                    timeout: 60000,\n                },\n            });\n\n            const response = await axios.post(`${SERVER_URL}/authenticateFingerprint`, {\n                voterAddress: walletAddress,\n                fingerprintData: assertion.id,\n            });\n\n            alert(response.data.message);\n        } catch (error) {\n            console.error(\"Fingerprint authentication failed:\", error);\n            alert(\"Fingerprint authentication failed.\");\n        }\n    };\n\n    // ✅ Add Candidate\n    const handleAddCandidate = async () => {\n        if (!candidateName) {\n            alert(\"Please enter a candidate name.\");\n            return;\n        }\n\n        try {\n            await axios.post(`${SERVER_URL}/addCandidate`, { name: candidateName });\n            alert(\"Candidate added successfully!\");\n            setCandidateName(\"\");\n            getCandidate();\n        } catch (error) {\n            console.error(\"Error adding candidate:\", error);\n            alert(\"Failed to add candidate.\");\n        }\n    };\n\n    // ✅ Fetch Candidates\n    const getCandidate = async (candidateId) => {\n        try {\n            const response = await axios.get(`${SERVER_URL}/api/getCandidate/${candidateId}`); // ✅ Pass candidate ID\n            setCandidate(response.data);\n        } catch (error) {\n            console.error(\"Error fetching candidate:\", error);\n        }\n    };\n    \n\n    // ✅ Vote for Candidate\n    const voteForCandidate = async () => {\n        if (!selectedCandidate) {\n            alert(\"Please select a candidate to vote for.\");\n            return;\n        }\n\n        try {\n            await axios.post(`${SERVER_URL}/vote`, { voterAddress: walletAddress, candidateId: selectedCandidate });\n            alert(\"Vote cast successfully!\");\n        } catch (error) {\n            console.error(\"Error casting vote:\", error);\n            alert(\"Failed to cast vote.\");\n        }\n    };\n\n    return (\n        <div>\n            <h1>E-Voting System</h1>\n            <button onClick={connectMetaMask}>Connect MetaMask</button>\n            <button onClick={registerFingerprint}>Register Fingerprint</button>\n            <button onClick={authenticateFingerprint}>Authenticate Fingerprint</button>\n            \n            <h2>Add Candidate</h2>\n            <input type=\"text\" value={candidateName} onChange={(e) => setCandidateName(e.target.value)} />\n            <button onClick={handleAddCandidate}>Add Candidate</button>\n            \n            <h2>Vote</h2>\n            <button onClick={voteForCandidate}>Vote</button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}