{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import Web3 from\"web3\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SERVER_URL=\"/api\";function App(){const[email,setEmail]=useState(\"\");const[aadharID,setAadharID]=useState(\"\");const[otp,setOtp]=useState(\"\");const[fingerprintCredential,setFingerprintCredential]=useState(null);const[walletAddress,setWalletAddress]=useState(\"\");// MetaMask Connection\nconst connectMetaMask=async()=>{if(window.ethereum){try{const accounts=await window.ethereum.request({method:\"eth_requestAccounts\"});setWalletAddress(accounts[0]);alert(\"MetaMask Connected!\");}catch(error){console.error(\"Error connecting MetaMask:\",error);alert(\"Failed to connect MetaMask.\");}}else{alert(\"MetaMask not detected. Please install MetaMask.\");}};// Send OTP with Aadhar ID\nconst sendOTP=async()=>{try{await axios.post(`${SERVER_URL}/sendOTP`,{email,aadharID});alert(\"OTP sent successfully!\");}catch(error){console.error(\"Error sending OTP:\",error);alert(\"Failed to send OTP.\");}};// Verify OTP with Aadhar ID\nconst verifyOTP=async()=>{try{const response=await axios.post(`${SERVER_URL}/verifyOTP`,{email,otp,aadharID});if(response.data.verified){alert(\"OTP and Aadhar Verified!\");}else{alert(\"Invalid OTP or Aadhar ID!\");}}catch(error){console.error(\"Error verifying OTP:\",error);}};// Register Fingerprint\nconst registerFingerprint=async()=>{try{const credential=await navigator.credentials.create({publicKey:{challenge:new Uint8Array(32),rp:{name:\"E-Voting System\"},user:{id:new Uint8Array(16),name:email,displayName:email},pubKeyCredParams:[{alg:-7,type:\"public-key\"}],authenticatorSelection:{authenticatorAttachment:\"platform\"},timeout:60000}});setFingerprintCredential(credential);alert(\"Fingerprint Registered!\");}catch(error){console.error(\"Fingerprint registration failed:\",error);alert(\"Fingerprint registration failed.\");}};// Authenticate with Fingerprint\nconst authenticateFingerprint=async()=>{try{if(!fingerprintCredential){alert(\"No fingerprint registered. Please register first.\");return;}const assertion=await navigator.credentials.get({publicKey:{challenge:new Uint8Array(32),timeout:60000}});alert(\"Fingerprint Authenticated!\");}catch(error){console.error(\"Fingerprint authentication failed:\",error);alert(\"Fingerprint authentication failed.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"E-Voting System\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"MetaMask Authentication\"}),/*#__PURE__*/_jsx(\"button\",{onClick:connectMetaMask,children:\"Connect MetaMask\"}),walletAddress&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Connected Wallet: \",walletAddress]}),/*#__PURE__*/_jsx(\"h2\",{children:\"OTP & Aadhar Authentication\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Enter Email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter Aadhar ID\",value:aadharID,onChange:e=>setAadharID(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:sendOTP,children:\"Send OTP\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter OTP\",value:otp,onChange:e=>setOtp(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:verifyOTP,children:\"Verify OTP & Aadhar\"}),/*#__PURE__*/_jsx(\"h2\",{children:\"Fingerprint Authentication\"}),/*#__PURE__*/_jsx(\"button\",{onClick:registerFingerprint,children:\"Register Fingerprint\"}),/*#__PURE__*/_jsx(\"button\",{onClick:authenticateFingerprint,children:\"Authenticate Fingerprint\"})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","Web3","jsx","_jsx","jsxs","_jsxs","SERVER_URL","App","email","setEmail","aadharID","setAadharID","otp","setOtp","fingerprintCredential","setFingerprintCredential","walletAddress","setWalletAddress","connectMetaMask","window","ethereum","accounts","request","method","alert","error","console","sendOTP","post","verifyOTP","response","data","verified","registerFingerprint","credential","navigator","credentials","create","publicKey","challenge","Uint8Array","rp","name","user","id","displayName","pubKeyCredParams","alg","type","authenticatorSelection","authenticatorAttachment","timeout","authenticateFingerprint","assertion","get","children","onClick","placeholder","value","onChange","e","target"],"sources":["C:/Users/Ajaykumar Kavassery/contracts/evoting-project/evoting-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\n\nconst SERVER_URL = \"/api\";\n\nfunction App() {\n    const [email, setEmail] = useState(\"\");\n    const [aadharID, setAadharID] = useState(\"\");\n    const [otp, setOtp] = useState(\"\");\n    const [fingerprintCredential, setFingerprintCredential] = useState(null);\n    const [walletAddress, setWalletAddress] = useState(\"\");\n\n    // MetaMask Connection\n    const connectMetaMask = async () => {\n        if (window.ethereum) {\n            try {\n                const accounts = await window.ethereum.request({ method: \"eth_requestAccounts\" });\n                setWalletAddress(accounts[0]);\n                alert(\"MetaMask Connected!\");\n            } catch (error) {\n                console.error(\"Error connecting MetaMask:\", error);\n                alert(\"Failed to connect MetaMask.\");\n            }\n        } else {\n            alert(\"MetaMask not detected. Please install MetaMask.\");\n        }\n    };\n\n    // Send OTP with Aadhar ID\n    const sendOTP = async () => {\n        try {\n            await axios.post(`${SERVER_URL}/sendOTP`, { email, aadharID });\n            alert(\"OTP sent successfully!\");\n        } catch (error) {\n            console.error(\"Error sending OTP:\", error);\n            alert(\"Failed to send OTP.\");\n        }\n    };\n\n    // Verify OTP with Aadhar ID\n    const verifyOTP = async () => {\n        try {\n            const response = await axios.post(`${SERVER_URL}/verifyOTP`, { email, otp, aadharID });\n            if (response.data.verified) {\n                alert(\"OTP and Aadhar Verified!\");\n            } else {\n                alert(\"Invalid OTP or Aadhar ID!\");\n            }\n        } catch (error) {\n            console.error(\"Error verifying OTP:\", error);\n        }\n    };\n\n    // Register Fingerprint\n    const registerFingerprint = async () => {\n        try {\n            const credential = await navigator.credentials.create({\n                publicKey: {\n                    challenge: new Uint8Array(32),\n                    rp: { name: \"E-Voting System\" },\n                    user: {\n                        id: new Uint8Array(16),\n                        name: email,\n                        displayName: email,\n                    },\n                    pubKeyCredParams: [{ alg: -7, type: \"public-key\" }],\n                    authenticatorSelection: { authenticatorAttachment: \"platform\" },\n                    timeout: 60000,\n                },\n            });\n\n            setFingerprintCredential(credential);\n            alert(\"Fingerprint Registered!\");\n        } catch (error) {\n            console.error(\"Fingerprint registration failed:\", error);\n            alert(\"Fingerprint registration failed.\");\n        }\n    };\n\n    // Authenticate with Fingerprint\n    const authenticateFingerprint = async () => {\n        try {\n            if (!fingerprintCredential) {\n                alert(\"No fingerprint registered. Please register first.\");\n                return;\n            }\n\n            const assertion = await navigator.credentials.get({\n                publicKey: {\n                    challenge: new Uint8Array(32),\n                    timeout: 60000,\n                },\n            });\n\n            alert(\"Fingerprint Authenticated!\");\n        } catch (error) {\n            console.error(\"Fingerprint authentication failed:\", error);\n            alert(\"Fingerprint authentication failed.\");\n        }\n    };\n\n    return (\n        <div>\n            <h1>E-Voting System</h1>\n\n            <h2>MetaMask Authentication</h2>\n            <button onClick={connectMetaMask}>Connect MetaMask</button>\n            {walletAddress && <p>Connected Wallet: {walletAddress}</p>}\n\n            <h2>OTP & Aadhar Authentication</h2>\n            <input type=\"email\" placeholder=\"Enter Email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n            <input type=\"text\" placeholder=\"Enter Aadhar ID\" value={aadharID} onChange={(e) => setAadharID(e.target.value)} />\n            <button onClick={sendOTP}>Send OTP</button>\n\n            <input type=\"text\" placeholder=\"Enter OTP\" value={otp} onChange={(e) => setOtp(e.target.value)} />\n            <button onClick={verifyOTP}>Verify OTP & Aadhar</button>\n\n            <h2>Fingerprint Authentication</h2>\n            <button onClick={registerFingerprint}>Register Fingerprint</button>\n            <button onClick={authenticateFingerprint}>Authenticate Fingerprint</button>\n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}