{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import Web3 from\"web3\";import{fetchCandidatesFromMongo}from\"./mongodb\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SERVER_URL=\"\";// ✅ Replace with deployed backend URL\nconst CONTRACT_ADDRESS=\"0xcC9B2454F7bcC009b2696Af9De6D745307aB3A49\";// ✅ Replace with deployed contract\nconst ADMIN_ADDRESS=\"0x0EA217414c1FaC69E4CBf49F3d8277dF69a76b7D\";// ✅ Replace with Admin's MetaMask Address\nfunction App(){const[candidates,setCandidates]=useState([]);const[candidateName,setCandidateName]=useState(\"\");const[walletAddress,setWalletAddress]=useState(\"\");const[selectedCandidate,setSelectedCandidate]=useState(\"\");const[voteMethod,setVoteMethod]=useState(\"\");const[fingerprintCredential,setFingerprintCredential]=useState(null);useEffect(()=>{fetchCandidates();},[]);// ✅ Fetch Candidates\nconst fetchCandidates=async()=>{try{const fetchedCandidates=await fetchCandidatesFromMongo();// ✅ Get candidates from MongoDB\nif(!Array.isArray(fetchedCandidates))throw new Error(\"Invalid candidates data\");setCandidates(fetchedCandidates);// ✅ Store candidates in React state\nconsole.log(\"Fetched Candidates:\",fetchedCandidates);}catch(error){console.error(\"Error fetching candidates:\",error);}};// ✅ Connect MetaMask\nconst connectMetaMask=async()=>{if(window.ethereum){const web3=new Web3(window.ethereum);try{await window.ethereum.request({method:\"eth_requestAccounts\"});const accounts=await web3.eth.getAccounts();setWalletAddress(accounts[0]);alert(`Connected: ${accounts[0]}`);}catch(error){console.error(\"MetaMask connection failed:\",error);}}else{alert(\"MetaMask is not installed. Please install MetaMask.\");}};// ✅ Register Fingerprint using WebAuthn API\nconst registerFingerprint=async()=>{try{if(!window.PublicKeyCredential){alert(\"WebAuthn is not supported in this browser.\");return;}const publicKey={challenge:new Uint8Array(32),rp:{name:\"E-Voting System\"},user:{id:new Uint8Array(16),name:walletAddress||\"anonymous\",displayName:walletAddress||\"anonymous\"},pubKeyCredParams:[{type:\"public-key\",alg:-7}],authenticatorSelection:{authenticatorAttachment:\"platform\"},timeout:60000,attestation:\"direct\"};const credential=await navigator.credentials.create({publicKey});setFingerprintCredential(credential);await axios.post(`${SERVER_URL}/registerVoterWithFingerprint`,{fingerprintCredential:JSON.stringify(credential),walletAddress});alert(\"Fingerprint registered successfully!\");}catch(error){console.error(\"Error registering fingerprint:\",error);alert(\"Fingerprint registration failed.\");}};// ✅ Authenticate & Vote Using Fingerprint\nconst voteWithFingerprint=async()=>{try{if(!window.PublicKeyCredential){alert(\"WebAuthn is not supported in this browser.\");return;}if(!selectedCandidate){alert(\"Select a candidate first!\");return;}const publicKey={challenge:new Uint8Array(32),allowCredentials:[{id:fingerprintCredential.rawId,type:\"public-key\"}],timeout:60000};const assertion=await navigator.credentials.get({publicKey});await axios.post(`${SERVER_URL}/voteWithFingerprint`,{fingerprintCredential:JSON.stringify(assertion),candidateId:selectedCandidate});alert(\"Vote cast successfully with fingerprint!\");}catch(error){console.error(\"Error voting with fingerprint:\",error);alert(\"Fingerprint authentication failed.\");}};// ✅ Vote Using MetaMask\nconst voteWithMetaMask=async()=>{try{if(!selectedCandidate){alert(\"Select a candidate first!\");return;}if(!walletAddress){alert(\"Connect MetaMask first\");return;}await axios.post(`${SERVER_URL}/voteWithMetaMask`,{walletAddress,candidateId:selectedCandidate});alert(\"Vote cast successfully using MetaMask!\");}catch(error){console.error(\"Error voting with MetaMask:\",error);alert(\"Voting failed.\");}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"E-Voting System\"}),/*#__PURE__*/_jsx(\"button\",{onClick:connectMetaMask,children:\"Connect MetaMask\"}),(walletAddress===null||walletAddress===void 0?void 0:walletAddress.toLowerCase())===ADMIN_ADDRESS.toLowerCase()&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Panel\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:candidateName,onChange:e=>setCandidateName(e.target.value),placeholder:\"Candidate Name\"}),/*#__PURE__*/_jsx(\"button\",{onClick:async()=>{try{await axios.post(`${SERVER_URL}/addCandidate`,{name:candidateName,walletAddress});alert(\"Candidate added successfully!\");setCandidateName(\"\");fetchCandidates();}catch(error){console.error(\"Error adding candidate:\",error);}},children:\"Add Candidate\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Voter Registration\"}),/*#__PURE__*/_jsx(\"button\",{onClick:registerFingerprint,children:\"Register Fingerprint\"})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Vote\"}),/*#__PURE__*/_jsx(\"label\",{children:\"Select Voting Method:\"}),/*#__PURE__*/_jsxs(\"select\",{value:voteMethod,onChange:e=>setVoteMethod(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Choose\"}),/*#__PURE__*/_jsx(\"option\",{value:\"fingerprint\",children:\"Fingerprint\"}),/*#__PURE__*/_jsx(\"option\",{value:\"metamask\",children:\"MetaMask\"})]}),/*#__PURE__*/_jsxs(\"select\",{onChange:e=>setSelectedCandidate(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Candidate\"}),candidates.map(candidate=>/*#__PURE__*/_jsxs(\"option\",{value:candidate._id,children:[candidate.name,\" - Votes: \",candidate.voteCount]},candidate._id))]}),/*#__PURE__*/_jsx(\"p\",{children:\"No candidates available.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:voteMethod===\"fingerprint\"?voteWithFingerprint:voteWithMetaMask,disabled:!selectedCandidate||!voteMethod,children:\"Vote\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","Web3","fetchCandidatesFromMongo","jsx","_jsx","jsxs","_jsxs","SERVER_URL","CONTRACT_ADDRESS","ADMIN_ADDRESS","App","candidates","setCandidates","candidateName","setCandidateName","walletAddress","setWalletAddress","selectedCandidate","setSelectedCandidate","voteMethod","setVoteMethod","fingerprintCredential","setFingerprintCredential","fetchCandidates","fetchedCandidates","Array","isArray","Error","console","log","error","connectMetaMask","window","ethereum","web3","request","method","accounts","eth","getAccounts","alert","registerFingerprint","PublicKeyCredential","publicKey","challenge","Uint8Array","rp","name","user","id","displayName","pubKeyCredParams","type","alg","authenticatorSelection","authenticatorAttachment","timeout","attestation","credential","navigator","credentials","create","post","JSON","stringify","voteWithFingerprint","allowCredentials","rawId","assertion","get","candidateId","voteWithMetaMask","children","onClick","toLowerCase","value","onChange","e","target","placeholder","map","candidate","_id","voteCount","disabled"],"sources":["C:/Users/Ajaykumar Kavassery/contracts/evoting-project/evoting-frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Web3 from \"web3\";\nimport { fetchCandidatesFromMongo } from \"./mongodb\";\n\nconst SERVER_URL = \"\"; // ✅ Replace with deployed backend URL\nconst CONTRACT_ADDRESS = \"0xcC9B2454F7bcC009b2696Af9De6D745307aB3A49\"; // ✅ Replace with deployed contract\nconst ADMIN_ADDRESS = \"0x0EA217414c1FaC69E4CBf49F3d8277dF69a76b7D\"; // ✅ Replace with Admin's MetaMask Address\n\nfunction App() {\n    const [candidates, setCandidates] = useState([]);\n    const [candidateName, setCandidateName] = useState(\"\");\n    const [walletAddress, setWalletAddress] = useState(\"\");\n    const [selectedCandidate, setSelectedCandidate] = useState(\"\");\n    const [voteMethod, setVoteMethod] = useState(\"\");\n    const [fingerprintCredential, setFingerprintCredential] = useState(null);\n\n    useEffect(() => {\n        fetchCandidates();\n    }, []); \n    \n\n    // ✅ Fetch Candidates\n    const fetchCandidates = async () => {\n        try {\n            const fetchedCandidates = await fetchCandidatesFromMongo(); // ✅ Get candidates from MongoDB\n            if (!Array.isArray(fetchedCandidates)) throw new Error(\"Invalid candidates data\");\n            setCandidates(fetchedCandidates); // ✅ Store candidates in React state\n            console.log(\"Fetched Candidates:\", fetchedCandidates);\n        } catch (error) {\n            console.error(\"Error fetching candidates:\", error);\n        }\n    };\n    \n\n    // ✅ Connect MetaMask\n    const connectMetaMask = async () => {\n        if (window.ethereum) {\n            const web3 = new Web3(window.ethereum);\n            try {\n                await window.ethereum.request({ method: \"eth_requestAccounts\" });\n                const accounts = await web3.eth.getAccounts();\n                setWalletAddress(accounts[0]);\n                alert(`Connected: ${accounts[0]}`);\n            } catch (error) {\n                console.error(\"MetaMask connection failed:\", error);\n            }\n        } else {\n            alert(\"MetaMask is not installed. Please install MetaMask.\");\n        }\n    };\n\n    // ✅ Register Fingerprint using WebAuthn API\n    const registerFingerprint = async () => {\n        try {\n            if (!window.PublicKeyCredential) {\n                alert(\"WebAuthn is not supported in this browser.\");\n                return;\n            }\n\n            const publicKey = {\n                challenge: new Uint8Array(32),\n                rp: { name: \"E-Voting System\" },\n                user: {\n                    id: new Uint8Array(16),\n                    name: walletAddress || \"anonymous\",\n                    displayName: walletAddress || \"anonymous\",\n                },\n                pubKeyCredParams: [{ type: \"public-key\", alg: -7 }],\n                authenticatorSelection: { authenticatorAttachment: \"platform\" },\n                timeout: 60000,\n                attestation: \"direct\",\n            };\n\n            const credential = await navigator.credentials.create({ publicKey });\n            setFingerprintCredential(credential);\n\n            await axios.post(`${SERVER_URL}/registerVoterWithFingerprint`, {\n                fingerprintCredential: JSON.stringify(credential),\n                walletAddress\n            });\n\n            alert(\"Fingerprint registered successfully!\");\n        } catch (error) {\n            console.error(\"Error registering fingerprint:\", error);\n            alert(\"Fingerprint registration failed.\");\n        }\n    };\n\n    // ✅ Authenticate & Vote Using Fingerprint\n    const voteWithFingerprint = async () => {\n        try {\n            if (!window.PublicKeyCredential) {\n                alert(\"WebAuthn is not supported in this browser.\");\n                return;\n            }\n\n            if (!selectedCandidate) {\n                alert(\"Select a candidate first!\");\n                return;\n            }\n\n            const publicKey = {\n                challenge: new Uint8Array(32),\n                allowCredentials: [{ id: fingerprintCredential.rawId, type: \"public-key\" }],\n                timeout: 60000,\n            };\n\n            const assertion = await navigator.credentials.get({ publicKey });\n\n            await axios.post(`${SERVER_URL}/voteWithFingerprint`, {\n                fingerprintCredential: JSON.stringify(assertion),\n                candidateId: selectedCandidate\n            });\n\n            alert(\"Vote cast successfully with fingerprint!\");\n        } catch (error) {\n            console.error(\"Error voting with fingerprint:\", error);\n            alert(\"Fingerprint authentication failed.\");\n        }\n    };\n\n    // ✅ Vote Using MetaMask\n    const voteWithMetaMask = async () => {\n        try {\n            if (!selectedCandidate) {\n                alert(\"Select a candidate first!\");\n                return;\n            }\n\n            if (!walletAddress) {\n                alert(\"Connect MetaMask first\");\n                return;\n            }\n\n            await axios.post(`${SERVER_URL}/voteWithMetaMask`, { walletAddress, candidateId: selectedCandidate });\n            alert(\"Vote cast successfully using MetaMask!\");\n        } catch (error) {\n            console.error(\"Error voting with MetaMask:\", error);\n            alert(\"Voting failed.\");\n        }\n    };\n\n    return (\n        <div>\n            <h1>E-Voting System</h1>\n            <button onClick={connectMetaMask}>Connect MetaMask</button>\n\n            {/* ✅ Admin Panel (Only for Admin) */}\n            {walletAddress?.toLowerCase() === ADMIN_ADDRESS.toLowerCase() && (\n                <div>\n                    <h2>Admin Panel</h2>\n                    <input type=\"text\" value={candidateName} onChange={(e) => setCandidateName(e.target.value)} placeholder=\"Candidate Name\" />\n                    <button onClick={async () => {\n                        try {\n                            await axios.post(`${SERVER_URL}/addCandidate`, { name: candidateName, walletAddress });\n                            alert(\"Candidate added successfully!\");\n                            setCandidateName(\"\");\n                            fetchCandidates();\n                        } catch (error) {\n                            console.error(\"Error adding candidate:\", error);\n                        }\n                    }}>Add Candidate</button>\n                </div>\n            )}\n\n            {/* ✅ Voter Registration */}\n            <div>\n                <h2>Voter Registration</h2>\n                <button onClick={registerFingerprint}>Register Fingerprint</button>\n            </div>\n\n            {/* ✅ Voting Section */}\n            <div>\n                <h2>Vote</h2>\n                <label>Select Voting Method:</label>\n                <select value={voteMethod} onChange={(e) => setVoteMethod(e.target.value)}>\n                    <option value=\"\">Choose</option>\n                    <option value=\"fingerprint\">Fingerprint</option>\n                    <option value=\"metamask\">MetaMask</option>\n                </select>\n\n                {/* ✅ Display Candidates */}\n                <select onChange={(e) => setSelectedCandidate(e.target.value)}>\n    <option value=\"\">Select Candidate</option>\n    {candidates.map((candidate) => (\n        <option key={candidate._id} value={candidate._id}>\n            {candidate.name} - Votes: {candidate.voteCount}\n        </option>\n    ))}\n</select>\n                    <p>No candidates available.</p>\n                \n\n                {/* ✅ Vote Buttons */}\n                <button onClick={voteMethod === \"fingerprint\" ? voteWithFingerprint : voteWithMetaMask} disabled={!selectedCandidate || !voteMethod}>\n                    Vote\n                </button>\n            </div>\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}